// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QTChinnok.Logic.DataContext;

#nullable disable

namespace QTChinnok.Logic.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20230126101549_AddedMusicCollection")]
    partial class AddedMusicCollection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("AlbumMusicCollection", b =>
                {
                    b.Property<int>("AlbumsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MusicCollectionsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlbumsId", "MusicCollectionsId");

                    b.HasIndex("MusicCollectionsId");

                    b.ToTable("AlbumMusicCollection");
                });

            modelBuilder.Entity("QTChinnok.Logic.Entities.App.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("AlbumId");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("albums");
                });

            modelBuilder.Entity("QTChinnok.Logic.Entities.App.MusicCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("MusicCollectionId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("musiccollections");
                });

            modelBuilder.Entity("QTChinnok.Logic.Entities.Base.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ArtistId");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("artists");
                });

            modelBuilder.Entity("QTChinnok.Logic.Entities.Base.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("GenreId");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("genres");
                });

            modelBuilder.Entity("QTChinnok.Logic.Entities.Base.MediaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("MediaTypeId");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("media_types");
                });

            modelBuilder.Entity("AlbumMusicCollection", b =>
                {
                    b.HasOne("QTChinnok.Logic.Entities.App.Album", null)
                        .WithMany()
                        .HasForeignKey("AlbumsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QTChinnok.Logic.Entities.App.MusicCollection", null)
                        .WithMany()
                        .HasForeignKey("MusicCollectionsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("QTChinnok.Logic.Entities.App.Album", b =>
                {
                    b.HasOne("QTChinnok.Logic.Entities.Base.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("QTChinnok.Logic.Entities.Base.Artist", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
