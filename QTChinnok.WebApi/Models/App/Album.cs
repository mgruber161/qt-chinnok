//@GeneratedCode
namespace QTChinnok.WebApi.Models.App
{
    using System;
    ///
    /// Generated by the generator
    ///
    
    public partial class Album
    {
        ///
        /// Generated by the generator
        ///
        static Album()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        
        ///
        /// Generated by the generator
        ///
        public Album()
        {
            Constructing();
            
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        
        public IdType ArtistId { get; set; }
        ///
        /// Generated by the generator
        ///
        
        public System.String Title { get; set; } = string.Empty;
        ///
        /// Generated by the generator
        ///
        
        public QTChinnok.WebApi.Models.Base.Artist? Artist { get; set; }
        ///
        /// Generated by the generator
        ///
        
        public System.Collections.Generic.List<QTChinnok.WebApi.Models.App.Track> Tracks { get; set; } = new();
        ///
        /// Generated by the generator
        ///
        
        public System.Collections.Generic.List<QTChinnok.WebApi.Models.App.MusicCollection> MusicCollections { get; set; } = new();
        ///
        /// Generated by the generator
        ///
        public static QTChinnok.WebApi.Models.App.Album Create()
        {
            BeforeCreate();
            var result = new QTChinnok.WebApi.Models.App.Album();
            AfterCreate(result);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTChinnok.WebApi.Models.App.Album Create(object other)
        {
            BeforeCreate(other);
            var result = new QTChinnok.WebApi.Models.App.Album();
            CommonBase.Extensions.ObjectExtensions.CopyFrom(result, other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate();
        static partial void AfterCreate(QTChinnok.WebApi.Models.App.Album instance);
        static partial void BeforeCreate(object other);
        static partial void AfterCreate(QTChinnok.WebApi.Models.App.Album instance, object other);
        ///
        /// Generated by the generator
        ///
        public static QTChinnok.WebApi.Models.App.Album Create(QTChinnok.Logic.Models.App.Album other)
        {
            BeforeCreate(other);
            var result = new QTChinnok.WebApi.Models.App.Album();
            result.CopyProperties(other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate(QTChinnok.Logic.Models.App.Album other);
        static partial void AfterCreate(QTChinnok.WebApi.Models.App.Album instance, QTChinnok.Logic.Models.App.Album other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTChinnok.Logic.Models.App.Album other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                Id = other.Id;
                ArtistId = other.ArtistId;
                Title = other.Title;
                Artist = other.Artist != null ? QTChinnok.WebApi.Models.Base.Artist.Create((object)other.Artist) : null;
                Tracks = other.Tracks.Select(e => QTChinnok.WebApi.Models.App.Track.Create((object)e)).ToList();
                MusicCollections = other.MusicCollections.Select(e => QTChinnok.WebApi.Models.App.MusicCollection.Create((object)e)).ToList();
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTChinnok.Logic.Models.App.Album other, ref bool handled);
        partial void AfterCopyProperties(QTChinnok.Logic.Models.App.Album other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTChinnok.WebApi.Models.App.Album other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                Id = other.Id;
                ArtistId = other.ArtistId;
                Title = other.Title;
                Artist = other.Artist != null ? QTChinnok.WebApi.Models.Base.Artist.Create((object)other.Artist) : null;
                Tracks = other.Tracks.Select(e => QTChinnok.WebApi.Models.App.Track.Create((object)e)).ToList();
                MusicCollections = other.MusicCollections.Select(e => QTChinnok.WebApi.Models.App.MusicCollection.Create((object)e)).ToList();
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTChinnok.WebApi.Models.App.Album other, ref bool handled);
        partial void AfterCopyProperties(QTChinnok.WebApi.Models.App.Album other);
        ///
        /// Generated by the generator
        ///
        public override bool Equals(object? obj)
        {
            bool result = false;
            if (obj is Models.App.Album other)
            {
                result = Id == other.Id;
            }
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public override int GetHashCode()
        {
            return this.CalculateHashCode(Id, ArtistId, Title, Artist, Tracks, MusicCollections);
        }
    }
}
